# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T16:56:33+00:00



import argparse
import json
import os
from typing import *
from typing import Optional

from autogen.mcp.mcp_proxy import MCPProxy
from autogen.mcp.mcp_proxy.security import BaseSecurity
from fastapi import Query

app = MCPProxy(
    contact={},
    title='balldontlie',
    version='1.0.0',
    servers=[{'url': 'https://balldontlie.io'}],
)


@app.get(
    '/api/v1/games',
    description=""" all games (example parameters) """,
    tags=['game_data_handling', 'team_data_handling'],
)
def all_games_example_parameters(
    seasons__: Optional[str] = Query(None, alias='seasons[]'),
    team_ids__: Optional[str] = Query(None, alias='team_ids[]'),
):
    """
    all games (example parameters)
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/games/32881',
    description=""" specific game """,
    tags=['game_data_handling'],
)
def specific_game():
    """
    specific game
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/players',
    description=""" all players (search) """,
    tags=['player_data_handling'],
)
def all_players_search(search: Optional[str] = None):
    """
    all players (search)
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/players/237',
    description=""" specific player """,
    tags=['player_data_handling'],
)
def specific_player():
    """
    specific player
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/stats',
    description=""" all stats (example parameters) """,
    tags=['statistical_data_handling', 'player_data_handling'],
)
def all_stats_example_parameters(
    season__: Optional[str] = Query(None, alias='season[]'),
    player_ids__: Optional[str] = Query(None, alias='player_ids[]'),
):
    """
    all stats (example parameters)
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get('/api/v1/teams', description=""" all teams """, tags=['team_data_handling'])
def all_teams():
    """
    all teams
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/teams/1', description=""" specific team """, tags=['team_data_handling']
)
def specific_team():
    """
    specific team
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="MCP Server")
    parser.add_argument(
        "transport",
        choices=["stdio", "sse", "streamable-http"],
        help="Transport mode (stdio, sse or streamable-http)",
    )
    args = parser.parse_args()

    if "CONFIG_PATH" in os.environ:
        config_path = os.environ["CONFIG_PATH"]
        app.load_configuration(config_path)

    if "CONFIG" in os.environ:
        config = os.environ["CONFIG"]
        app.load_configuration_from_string(config)

    if "SECURITY" in os.environ:
        security_params = BaseSecurity.parse_security_parameters_from_env(
            os.environ,
        )

        app.set_security_params(security_params)

    mcp_settings = json.loads(os.environ.get("MCP_SETTINGS", "{}"))

    app.get_mcp(**mcp_settings).run(transport=args.transport)
